# 自定义名称
name: build docker image
# 触发方式
on:
  # push触发，如果main分支有push就自动触发构建
  # push:
    # branches:
      # - main
  # 可以手动触发
  workflow_dispatch:
    inputs:   # 手动触发时自定义参数
      jiagou:  # 架构选择
          description: '选择编译架构'
          required: true
          default: 'linux/amd64'
          type: choice
          options:
            - linux/amd64
            - linux/arm64
            - linux/amd64,linux/arm64
      changku:
        description: "推送到的仓库名称"
        required: true
        default: "tessssss"
      versions:
        description: "镜像版本"
        required: true
        default: "latest"
# 任务
jobs:
  buildx:
    # 基础环境
    runs-on: ubuntu-latest
    steps:    # 步骤
      # 拉取仓库代码
      - name: Checkout
        uses: actions/checkout@v3

      # 获取当前日期 输出
      - name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y-%m-%d_%H-%M')"

      # 设置QEMU虚拟机用于docker多架构构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 设置docker Buildx 构建
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # 打印支持构建的价格
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      # 登录dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          # 账户和token是从仓库secrets中取得
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 构建并推送
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          # 设置Dockerfile位置
          file: ./Dockerfile
          # 所需要的体系结构，可以在 Available platforms 步骤中获取所有的可用架构
          platforms: ${{ inputs.jiagou }}
          push: true
          # 给清单打上多个标签 打一个新标签，再覆盖latest即可推送2个镜像
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.changku }}:${{ inputs.versions }}
